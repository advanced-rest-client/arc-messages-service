{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Messages synchronization service for ARC\n\nIt gets the list of messages from ARC data store server and saves the list\nof newly created messages in local indexed db. Leter calls to the service\nwill request for list of messages since last sync time.\n\n### Example\n\n```html\n<arc-messages-service\n  platform=\"electron\"\n  channel=\"stable\"></arc-messages-service>\n<script>\nvar service = document.querySelector('arc-messages-service');\nservice.addEventListener('unread-changed', function(e) {\n  console.log('Unread messages list changed', e.detail.value);\n  service.readMessages(); // Can be replaced with `auto-messages` property\n});\n\nservice.addEventListener('messages-changed', function(e) {\n  console.log('All messages list changed', e.detail.value);\n});\n</script>\n```",
      "summary": "",
      "path": "arc-messages-service.js",
      "properties": [
        {
          "name": "platform",
          "type": "string | null | undefined",
          "description": "Name of the platform to serve data from",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "channel",
          "type": "string | null | undefined",
          "description": "Application release channel.\nUsually it's stable, beta and dev.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "endpointUri",
          "type": "string | null | undefined",
          "description": "Messages endpoint URI",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"https://app.advancedrestclient.com/info/messages\""
        },
        {
          "name": "messages",
          "type": "Array | null | undefined",
          "description": "List of messages",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "unread",
          "type": "Array | null | undefined",
          "description": "List of unread messages",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "lastChecked",
          "type": "number | null | undefined",
          "description": "Timestamp of last check opeartion",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_queryParams",
          "type": "Object | null | undefined",
          "description": "List of query parameters to use with the request",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 102,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_serviceUrl",
          "type": "string | null | undefined",
          "description": "Full URL to the messages endpoint with parameters.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "workerUrl",
          "type": "string | null | undefined",
          "description": "A URL that points to the script to load for the corresponding\nWorker instance that will be used for minimally-blocking operations\non IndexedDB.\n\nBy default, this will be the path to\n`app-indexeddb-mirror-worker.js` as resolved by\n`Polymer.Base.resolveUrl` for the current element being created.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "client",
          "type": "Object | null | undefined",
          "description": "An instance of `ArcMessagesServiceClient`, which is\nresponsible for negotiating transactions with the corresponding\nWorker spawned from `workerUrl`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"__clientChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "messagesResponse",
          "type": "Object | null | undefined",
          "description": "Response ferom the ARC messages endpoint.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "autoMessages",
          "type": "boolean | null | undefined",
          "description": "If set it will read list of all mesages from the datastore",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 156,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_lastCheckedChanged",
          "description": "Computes `_queryParams` based on the value and stores assigned value\nto the datastore.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 179,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "lastChecked",
              "type": "Number",
              "description": "Timestamp of last check time."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_whenChecked",
          "description": "Checkes when the DB was synchronized and sets `lastChecked` property\nthat triggest `iron-ajax` to request a data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeServiceUrl",
          "description": "Computes service URL depending on platform and url parameters",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpointUri",
              "type": "String",
              "description": "API endpoint URI."
            },
            {
              "name": "platform",
              "type": "String",
              "description": "Application platform"
            },
            {
              "name": "channel",
              "type": "String",
              "description": "Application release channel"
            },
            {
              "name": "params",
              "type": "Object",
              "description": "Additional query parameters"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Full URL to the messages service endpoint."
          }
        },
        {
          "name": "_storeChecked",
          "description": "Stores the information when last time checked for a messages.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "when"
            }
          ]
        },
        {
          "name": "__clientChanged",
          "description": "Connectes the web worker client.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "client"
            }
          ]
        },
        {
          "name": "__computeClient",
          "description": "Computes value for the client.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "workerUrl"
            }
          ]
        },
        {
          "name": "_messagesResponseReady",
          "description": "This is called only when the response is ready, not when any of the",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "[description]"
          }
        },
        {
          "name": "sync",
          "description": "Synchronizes incomming messages with the datastore.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 2
            },
            "end": {
              "line": 252,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "incommingMessages",
              "type": "Object",
              "description": "Response from ARC server."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_sync",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "incommingMessages"
            },
            {
              "name": "existingKeys"
            }
          ]
        },
        {
          "name": "updateUnread",
          "description": "Updates list of unread messages.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 289,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "readMessages",
          "description": "Reads list of all messages from the data store.\nIt sets the `messages` property when ready.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 2
            },
            "end": {
              "line": 303,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_messagesSort",
          "description": "Sort function for the messages.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 2
            },
            "end": {
              "line": 319,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_updateState",
          "description": "Updates a status of a message in the data store when a message\npart changes. This only works when a single message in the array has been\nupdated (either `unread` or `messages`).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 2
            },
            "end": {
              "line": 347,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer's change record"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_postUpdateMessage",
          "description": "Updates `unread` array depending on update state.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 355,
              "column": 2
            },
            "end": {
              "line": 373,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dataType",
              "type": "String",
              "description": "Either `unread` or `messages`."
            },
            {
              "name": "item",
              "type": "Object",
              "description": "Updated item object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "closeDb",
          "description": "Closes datastore connection in shared worker.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 2
            },
            "end": {
              "line": 381,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 48,
          "column": 7
        },
        "end": {
          "line": 382,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ArcMessagesService",
      "attributes": [
        {
          "name": "platform",
          "description": "Name of the platform to serve data from",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 22
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "channel",
          "description": "Application release channel.\nUsually it's stable, beta and dev.",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "endpoint-uri",
          "description": "Messages endpoint URI",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "messages",
          "description": "List of messages",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "unread",
          "description": "List of unread messages",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "last-checked",
          "description": "Timestamp of last check opeartion",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "worker-url",
          "description": "A URL that points to the script to load for the corresponding\nWorker instance that will be used for minimally-blocking operations\non IndexedDB.\n\nBy default, this will be the path to\n`app-indexeddb-mirror-worker.js` as resolved by\n`Polymer.Base.resolveUrl` for the current element being created.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "client",
          "description": "An instance of `ArcMessagesServiceClient`, which is\nresponsible for negotiating transactions with the corresponding\nWorker spawned from `workerUrl`.",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "messages-response",
          "description": "Response ferom the ARC messages endpoint.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 30
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "auto-messages",
          "description": "If set it will read list of all mesages from the datastore",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "messages-changed",
          "description": "Fired when the `messages` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unread-changed",
          "description": "Fired when the `unread` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "last-checked-changed",
          "description": "Fired when the `lastChecked` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "arc-messages-service"
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "arc-messages-service-client.js",
      "properties": [],
      "methods": [
        {
          "name": "post",
          "description": "Sends a message to the worker and awaits and handles a corresponding\nresponse.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message",
              "type": "*",
              "description": "Any value that can be sent via `postMessage` to the\nworker."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A promise that resolves when a corresponding response\nmessage has been received by from the worker. Requests are given a\nunique ID, so the first worker response that echos this ID will be\nused to resolve the promise."
          }
        },
        {
          "name": "_postImpl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message"
            },
            {
              "name": "worker"
            }
          ]
        },
        {
          "name": "transaction",
          "description": "Requests that the worker perform a transaction (supported verbs are\n`get` and `set`) against a provided `key` and optional `value` in the\nIndexedDB object store.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "string",
              "description": "The method of the transaction (`\"get\"` or\n`\"set\"`)"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Data type. Can be either `meta` or `data`."
            },
            {
              "name": "key",
              "type": "string",
              "description": "The key in the IndexedDB object store to operate\non."
            },
            {
              "name": "value",
              "type": "Object",
              "description": "The value to set at `key`, if using the `\"set\"`\n`method`."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A promise that resolves when the worker indicates\nthat the transaction has completed."
          }
        },
        {
          "name": "keys",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "listObjects",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "indexObjects",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "index"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "closeDb",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connect",
          "description": "Instantiates (if necessary) and connects to the backing worker\ninstance.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "A promise that resolves when the worker has been\ncreated and a handshake has been returned. The worker is an instance\nof `SharedWorker` (if available), or else `Polymer.CommonWorker`."
          }
        },
        {
          "name": "_connectImpl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 7
        },
        "end": {
          "line": 145,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "ArcMessagesServiceClient"
    }
  ]
}
